--------C++ Functions------------
What is a function?
    .C++ Programs:
        -C++ Standard Libraries (functions and classes)
        -3rd-Party Libraries (functions and classes)
        -Out own functions and classes

.Functions allow the modularization of a program
    -Separate code into logical self-contained units
    -These units can be reused

.Write your code to the function specification
.Understand what the function does
.Understand what information the function needs 
.Understand what the function returns
.Understand any errors the function may produce
.Understand any performance contraints

Information-Hiding: Don't worry about HOW the function works internally, unless you are the one
writing the function!

example:

int main(){

// read input
    read_input();

// process input
    process_input();

// provide output 
    provide_output();

    return 0;
}

.Common mathematical calculations
.Global functions called as:

function_name(argument);
    function_name(argument1, argument2, ...);

cout << sqrt(400.0) << endl;
double result;
result = pow(2.0, 3.0);
----------------------------------------------------------------------------------------
Defining our own functions:

int add_numbers(int a, int b){
    if (a < 0 || b < 0){
        return 0;
    }
    else {
        return a + b;
    }
}
cout << add_numbers(20, 40);




.Prototype
.Parameters and pass-by-value
.return statement
.default parameter values
.overloading
.passing arrays to functions
.pass-by-reference
.inline functions
.auto return type
.recursive functions
